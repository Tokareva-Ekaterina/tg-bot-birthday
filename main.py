import telebot
from telebot import types
import sqlite3
import threading
import time
from datetime import datetime
import schedule

bot = telebot.TeleBot('7407698133:AAFW2fKubPA7BGjpiuOuI6umeCmSQ_lpITM')


@bot.message_handler(commands=['start'])
def start(message):
    conn = sqlite3.connect('my_database.sql')
    cur = conn.cursor()
    cur.execute('''
        CREATE TABLE IF NOT EXISTS birthdays (
        id INTEGER PRIMARY KEY AUTOINCREMENT,
        id_user VARCHAR(50),
        name VARCHAR(50),
        date VARCHAR(50),
        date_format VARCHAR(50)
        )
        ''')
    conn.commit()
    cur.close()
    conn.close()

    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton('‚ûï –î–æ–±–∞–≤–∏—Ç—å –î–†')
    btn2 = types.KeyboardButton('‚ûñ –£–¥–∞–ª–∏—Ç—å –î–†')
    btn3 = types.KeyboardButton('üìã –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –î–†')
    keyboard.add(btn1, btn2)
    keyboard.add(btn3)
    bot.send_message(message.chat.id, '–ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ—Ç –±–æ—Ç –ø–æ–∑–≤–æ–ª—è–µ—Ç —Å–æ–∑–¥–∞–≤–∞—Ç—å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –æ –¥–Ω—è—Ö —Ä–æ–∂–¥–µ–Ω–∏—è.',
                     reply_markup=keyboard)


@bot.message_handler(func=lambda message: message.text == '‚ûï –î–æ–±–∞–≤–∏—Ç—å –î–†')
def instructions_add(message):
    bot.send_message(message.chat.id,
                     '–í–≤–µ–¥–∏—Ç–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –î–†.\n–ú–æ–∂–Ω–æ –≤–≤–µ—Å—Ç–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ –î–† (–∫–∞–∂–¥—ã–π –Ω–∞ –æ—Ç–¥–µ–ª—å–Ω–æ–π —Å—Ç—Ä–æ—á–∫–µ).\n\n–ü—Ä–∏–º–µ—Ä:\n15 –º–∞—è - –í–∞—Å—è')
    bot.register_next_step_handler(message, add_birthday)


def add_birthday(message):
    conn = sqlite3.connect('my_database.sql')
    cur = conn.cursor()

    id_user = message.chat.id
    months = {'—è–Ω–≤–∞—Ä—è': '01', '—Ñ–µ–≤—Ä–∞–ª—è': '02', '–º–∞—Ä—Ç–∞': '03', '–∞–ø—Ä–µ–ª—è': '04', '–º–∞—è': '05', '–∏—é–Ω—è': '06', '–∏—é–ª—è': '07',
              '–∞–≤–≥—É—Å—Ç–∞': '08', '—Å–µ–Ω—Ç—è–±—Ä—è': '09', '–æ–∫—Ç—è–±—Ä—è': '10', '–Ω–æ—è–±—Ä—è': '11', '–¥–µ–∫–∞–±—Ä—è': '12', }
    f = 0
    for line in message.text.split('\n'):
        data = [x.strip() for x in line.split('-')]
        name = data[1] if len(data)==2 else ''
        date = data[0].lower().split()

        if not (date[0].isdigit() and 1 <= int(date[0]) <= 31 and date[1] in months):
            f = 1
            continue
        day = date[0] if int(date[0]) > 9 else '0' + date[0]
        month = months[date[1]]
        date_format = f"2024-{month}-{day}"
        cur.execute('INSERT INTO birthdays (id_user, name, date, date_format) VALUES ("%s", "%s", "%s" , "%s")' % (
            id_user, name, data[0], date_format))

    conn.commit()
    cur.close()
    conn.close()
    if f == 0:
        bot.reply_to(message, '–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ')
    else:
        bot.reply_to(message, '–í—Å—Ç—Ä–µ—á–µ–Ω–∞ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è –¥–∞—Ç–∞. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É –¥–ª—è —ç—Ç–æ–π –∑–∞–ø–∏—Å–∏.')


@bot.message_handler(func=lambda message: message.text == 'üìã –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –î–†')
def show_birthdays(message):
    conn = sqlite3.connect('my_database.sql')
    cur = conn.cursor()
    cur.execute(f'SELECT name, date, date_format FROM birthdays WHERE id_user={message.chat.id} ORDER BY date_format')
    birthdays = cur.fetchall()
    cur.close()
    conn.close()
    if len(birthdays):
        info = ''
        for elem in birthdays:
            info += f'{elem[1]} - {elem[0]}\n'
        bot.send_message(message.chat.id, info)
    else:
        bot.send_message(message.chat.id, "–í—ã –ø–æ–∫–∞ –Ω–µ –¥–æ–±–∞–≤–∏–ª–∏ –Ω–∏ –æ–¥–Ω–æ–π –∑–∞–ø–∏—Å–∏")


@bot.message_handler(func=lambda message: message.text == '‚ûñ –£–¥–∞–ª–∏—Ç—å –î–†')
def instructions_delete(message):
    conn = sqlite3.connect('my_database.sql')
    cur = conn.cursor()
    cur.execute(f'SELECT id, name, date FROM birthdays WHERE id_user={message.chat.id} ORDER BY name')
    birthdays = cur.fetchall()
    cur.close()
    conn.close()
    if len(birthdays):
        ids_birthdays = [x[0] for x in birthdays]
        info = ''
        k = 0
        for elem in birthdays:
            k += 1
            info += f'{k}.  {elem[1]} - {elem[2]}\n'

        bot.send_message(message.chat.id,
                         f'–ü—Ä–∏—à–ª–∏—Ç–µ –Ω–æ–º–µ—Ä —É–¥–∞–ª—è–µ–º–æ–π –∑–∞–ø–∏—Å–∏ (–º–æ–∂–Ω–æ –Ω–µ—Å–∫–æ–ª—å–∫–æ - —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é).\n\n{info}')
        bot.register_next_step_handler(message, delete_birthday, ids_birthdays)
    else:
        bot.send_message(message.chat.id, "–í—ã –ø–æ–∫–∞ –Ω–µ –¥–æ–±–∞–≤–∏–ª–∏ –Ω–∏ –æ–¥–Ω–æ–π –∑–∞–ø–∏—Å–∏")


def delete_birthday(message, ids_birthdays):
    del_list = [ids_birthdays[int(i) - 1] for i in message.text.split(',') if 1<=int(i)<=len(ids_birthdays)]
    conn = sqlite3.connect('my_database.sql')
    cur = conn.cursor()
    f = 0
    for id_del in del_list:
        cur.execute(f'DELETE FROM birthdays WHERE id={id_del}')

    conn.commit()
    cur.close()
    conn.close()
    bot.reply_to(message, '–£–¥–∞–ª–µ–Ω–∏–µ –ø—Ä–æ—à–ª–æ —É—Å–ø–µ—à–Ω–æ')


def reminders():
    conn = sqlite3.connect('my_database.sql')
    cur = conn.cursor()
    date = '2024-' + datetime.now().strftime('%m-%d')
    cur.execute('SELECT id_user, name FROM birthdays WHERE date_format="%s"' % date)
    birthdays = cur.fetchall()

    for elem in birthdays:
        bot.send_message(elem[0], f'–°–µ–≥–æ–¥–Ω—è –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è –æ—Ç–º–µ—á–∞–µ—Ç: {elem[1]}')

    cur.close()
    conn.close()


def scheduler():
    schedule.every().day.at("10:00").do(reminders)
    while True:
        schedule.run_pending()
        time.sleep(1)


if __name__ == '__main__':
    thread = threading.Thread(target=scheduler)
    thread.start()
    bot.polling(none_stop=True)
